parsers: # array
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  - reg: ^.*$
  # 删除服务商提供的策略组和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 
  # 建立自己的配置
    yaml:
      prepend-proxy-groups: # 建立策略组
        - name: 影子分享 
          type: select
          proxies:
            - 自动选择
            - 手动选择
            - DIRECT
        - name: 自动选择
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300
          tolerance: 50
          proxies:
        - name: 手动选择
          type: select   
        - name: 声田音乐
          type: select
          proxies:
        - name: 推特服务
          type: select
          proxies: 
        - name: 苹果服务
          type: select
          proxies:
            - 全球直连
            - 影子分享
            - 自动选择
            - 手动选择
        - name: 微软服务
          type: select
          proxies:
            - 全球直连
            - 影子分享
            - 自动选择
            - 手动选择 
        - name: 全球直连
          type: select
          proxies:
            - DIRECT
            - 自动选择
            - 影子分享
            - 手动选择
        - name: 广告拦截
          type: select
          proxies:
            - REJECT
            - DIRECT        
        - name: 漏网之鱼
          type: select
          proxies:
            - 影子分享
            - 自动选择
            - 全球直连
            - 手动选择
  # 策略组示例
               # - name: 分组名
               # type: select       # 手动选点   
               # url-test     # 自动选择延迟最低的节点
               # fallback     # 节点故障时自动切换下一个
               # laod-balance # 均衡使用分组内的节点
         # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
         # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
         # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
         # proxies:  
           # - 节点名称或其他分组套娃
          
      commands:
        - proxy-groups.自动选择.proxies=[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
      # - proxy-groups.自动选择.proxies.0+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
        - proxy-groups.手动选择.proxies=[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
        - proxy-groups.手动选择.proxies.1+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
        - proxy-groups.声田音乐.proxies=[]proxyNames
        - proxy-groups.推特服务.proxies=[]proxyNames
        
        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c

  # 添加规则集
      mix-rule-providers: 
        Direct:
          type: http
          behavior: domain
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Direct/Direct.yaml"
          path: ./ruleset/Direct.yaml
        Lan:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan.yaml"
          path: ./ruleset/Lan.yaml
        reject: # 广告域名列表
          type: http
          behavior: domain
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
          path: ./ruleset/reject.yaml
          interval: 86400
        Apple:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml"
          path: ./ruleset/Apple.yaml
        Github:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml"
          path: ./ruleset/Github.yaml
        Google:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml"
          path: ./ruleset/Google.yaml
        Spotify:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Spotify/Spotify.yaml"
          path: ./ruleset/Spotify.yaml
        Twitter:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml"
          path: ./ruleset/Twitter.yaml
        ChinaIP:
          type: http
          behavior: ipcidr
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/clash-rule-provider.yml"
          path: ./ruleset/ChinaIP.yaml
        ProxyLite:
          type: http
          behavior: classical
          interval: 86400
          url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ProxyLite/ProxyLite.yaml"
          path: ./ruleset/ProxyLite.yaml

  # 添加规则
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        - RULE-SET,Direct,DIRECT
        - RULE-SET,Lan,DIRECT
        - RULE-SET,reject,广告拦截
        - RULE-SET,Apple,苹果服务
        - RULE-SET,Github,影子分享
        - RULE-SET,Spotify,声田音乐
        - RULE-SET,Google,影子分享
        - RULE-SET,Twitter,推特服务
        - RULE-SET,ProxyLite,影子分享
        - RULE-SET,ChinaIP,DIRECT
        - GEOIP,CN,DIRECT
        - MATCH,影子分享 # 规则之外的
